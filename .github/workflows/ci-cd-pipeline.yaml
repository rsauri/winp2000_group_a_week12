name: CI/CD Pipeline for Go App on AKS

on:
  push:
    branches:
      - master

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to Azure
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to registry
      uses: docker/login-action@v2
      with:
        registry: https://winp2000acr.azurecr.io/
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and Push Docker image to ACR
      run: az acr build --registry ${{ secrets.ACR_NAME }} --image go-app/go-app:${{ github.sha }} .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to Azure
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Get AKS credentials
      run: az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}

    - name: Deploy to AKS
      run: |
          sed -i "s|winp2000acr.azurecr.io/go-app:.*|winp2000acr.azurecr.io/go-app:${{ github.sha }}|" go-app-aks-deployment.yaml
          kubectl apply -f go-app-aks-deployment.yaml

    - name: Verify Deployment
      run: kubectl rollout status deployment/go-app
    
    # Optional: Run a test to ensure the app is working
    - name: Test Application
      run: curl -f http://$(kubectl get svc go-app -o=jsonpath='{.status.loadBalancer.ingress[0].ip}')

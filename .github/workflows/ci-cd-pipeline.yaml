name: CI/CD Pipeline for Go App on AKS

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to registry
      uses: docker/login-action@v2
      with:
        registry: https://winp2000acr.azurecr.io/
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Login 
      run: az login

    - name: Build and Push Docker image to ACR
      run: az acr build --registry ${{ secrets.ACR_NAME }} --image go-app/go-app:latest .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Azure CLI with Managed Identity
      uses: azure/setup-azurecli@v1

    - name: Login to Azure using Managed Identity
      run: az login --identity

    - name: Set Azure subscription
      run: az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Get AKS credentials
      run: az aks get-credentials --resource-group ${{ secrets.K8S_RESOURCE_GROUP }} --name ${{ secrets.K8S_CLUSTER_NAME }}

    - name: Deploy to AKS
      run: kubectl apply -f go-app-aks-deployment.yaml

    - name: Verify Deployment
      run: kubectl rollout status deployment/go-app-deployment
    
    # Optional: Run a test to ensure the app is working
    - name: Test Application
      run: curl -f http://$(kubectl get svc go-app -o=jsonpath='{.status.loadBalancer.ingress[0].ip}')
